openapi: 3.0.3
info:
  title: Gobase HTTP server
  version: 1.0.0
  contact:
    name: "Sab"
    email: "fasdf@gfas.co"
servers:
  - url: http://localhost:8080
    description: Local server
  - url: http://localhost:60005
    description: Docker http server
  - url: https://localhost:60006
    description: Docker https server
  - url: https://localhost:60007
    description: Docker h2c server
  - url: https://{environment}/gobase
    description: Deployment
    variables:
      environment:
        default: uat
        enum:
          - uat
          - prod
paths:
  /meta/health:
    get:
      responses:
        "204":
          description: NO CONTENT
      summary: Health check
      tags:
        - Meta
  /meta/status:
    get:
      produces:
        - application/json:
      responses:
        "200":
          description: Gives the current status
      summary: Status check
      tags:
        - Meta
  /meta/bench:
    get:
      responses:
        "204":
          description: NO CONTENT
      summary: Benchmarking test
      tags:
        - Meta
  /service/echo:
    $ref: "./scheme/service/echo/api.yaml"
  /service/echo/{pathId}:
    $ref: "./scheme/service/echo/pathApi.yaml"
  /service/error/error500:
    get:
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              examples:
                success:
                  $ref: "./scheme/service/errors/response.json#customError"
      summary: Error handling test
      tags:
        - Error
  /service/error/errorWithPanic:
    get:
      responses:
        "503":
          description: Internal server error
          content:
            application/json:
              examples:
                success:
                  $ref: "./scheme/service/errors/response.json#customError"
      summary: Error handling test
      tags:
        - Error
  /service/error/errorUnauthorized:
    get:
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              examples:
                success:
                  $ref: "./scheme/service/errors/response.json#customError"
      summary: Error handling test
      tags:
        - Error
  /service/error/panic:
    get:
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              examples:
                success:
                  $ref: "./scheme/service/errors/response.json#internalServerError"
      summary: Error handling test
      tags:
        - Error
  /service/test/all:
    $ref: "./scheme/service/test/api.yaml"
  /service/test/kafka:
    $ref: "./scheme/service/test/api.yaml"